version: '3.4'

networks:
  reading-tracker:
    driver: bridge

services:
  reading-tracker-frontend:
    image: mitch/my-reading-tracker.ui:${TAG:-latest}
    depends_on:
      reading-tracker-backend:
        condition: service_started
    container_name: reading-tracker-frontend
    ports:
      - "3000:80"
    build:
      context: ./library-frontend
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - reading-tracker

  reading-tracker-backend:
    image: mitch/my-reading-tracker.api:${TAG:-latest}
    depends_on:
      library-db:
        condition: service_healthy
    container_name: reading-tracker-backend
    ports:
      - "5099:8080"
    build:
      context: ./MyReadingTracker/MyReadingTracker
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=host=library-db;port=5432;database=library;username=postgres;password=password;Pooling=true;

    networks:
      - reading-tracker

  library-db:
    image: postgres:15-bullseye
    container_name: library-db
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres -d library
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSGTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=library
    restart: always
    volumes:
      - library_data:/var/lib/postgresql/data/
    networks:
      - reading-tracker

volumes:
  library_data: